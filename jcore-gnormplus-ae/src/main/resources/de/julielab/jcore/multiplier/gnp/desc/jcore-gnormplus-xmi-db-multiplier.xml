<?xml version='1.0' encoding='UTF-8'?>
<analysisEngineDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
    <primitive>true</primitive>
    <annotatorImplementationName>de.julielab.jcore.multiplier.gnp.GNormPlusXmiDBMultiplier</annotatorImplementationName>
    <analysisEngineMetaData>
        <name>JCoRe GNormPlus XMI Database Multiplier</name>
        <description>A CAS multiplier to be used with the DB XMI multiplier reader in place of the DB XMI multiplier. It wraps the JULIE Lab variant of the GNormPlus gene ID mapper. It is a multiplier because this enables batch-processing of documents with GNormPlus which makes the processing more efficient.</description>
        <version>2.6.1</version>
        <vendor>JULIE Lab Jena, Germany</vendor>
        <configurationParameters>
            <configurationParameter>
                <name>UseExistingGeneAnnotations</name>
                <description>If set to true, all Gene annotations in the CAS will be added to the BioC documents. The default type used is de.julielab.jcore.types.Gene. This can be changed with the InputGeneTypeName parameter.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>OutputGeneTypeName</name>
                <description>The UIMA type denoting gene annotations that should be created by this component. Must by a sub type of de.julielab.jcore.types.ConceptMention. Defaults to de.julielab.jcore.types.Gene.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>GNormPlusSetupFile</name>
                <description>File path or class path resource path to the setup.txt file for GNormPlus. If not specified, a default setup file is loaded that expects the Dictionary/ directory directly under the working directory, performs gene recognition with the CRF and thus expects the GNormPlus CRF directory directly under the working directory and maps the found genes to NCBI gene IDs for all organisms.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>InputGeneTypeName</name>
                <description>The UIMA type denoting gene annotations that should be taken from the CAS and written into the BioC format for GNormPlus to use instead of running its own gene recognition when the UseExistingGeneAnnotations parameter is set to true.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>OutputDirectory</name>
                <description>Optional. If specified, the GNormPlus output files in BioC format will be saved to the given directory. In this way, this component can be used directly as a BioC XML writer through the GNormPlus algorithm.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>FocusSpecies</name>
                <description>If given, all gene mentions are assigned to this NCBI taxonomy ID, i.e. species recognition is omitted.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>LogFinalXmi</name>
                <description>For debugging purposes. If set to true, before parsing the final XMI data assembled from the annotation modules, it is printed to console.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>TruncateAtSize</name>
                <description>Specify size in bytes of the XMI sofa string, i.e. the document text. If the text surpasses that size, the document is not populated from XMI but given some placeholder information. This can be necessary when large documents cannot be handled by subsequent components in the pipeline.</description>
                <type>Integer</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
        </configurationParameters>
        <configurationParameterSettings>
            <nameValuePair>
                <name>UseExistingGeneAnnotations</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>OutputGeneTypeName</name>
                <value>
                    <string>de.julielab.jcore.types.Gene</string>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>InputGeneTypeName</name>
                <value>
                    <string>de.julielab.jcore.types.Gene</string>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>LogFinalXmi</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
        </configurationParameterSettings>
        <typeSystemDescription>
            <imports>
                <import name="de.julielab.jcore.types.jcore-document-structure-pubmed-types" />
                <import name="de.julielab.jcore.types.jcore-semantics-biology-types" />
                <import name="de.julielab.jcore.types.jcore-document-meta-pubmed-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-document-meta-extension-types" />
                <import name="de.julielab.jcore.types.jcore-casflow-types" />
            </imports>
        </typeSystemDescription>
        <fsIndexCollection />
        <capabilities>
            <capability>
                <inputs />
                <outputs>
                    <type>de.julielab.jcore.types.ConceptMention</type>
                    <type>de.julielab.jcore.types.Organism</type>
                </outputs>
                <languagesSupported />
            </capability>
        </capabilities>
        <operationalProperties>
            <modifiesCas>true</modifiesCas>
            <multipleDeploymentAllowed>true</multipleDeploymentAllowed>
            <outputsNewCASes>true</outputsNewCASes>
        </operationalProperties>
    </analysisEngineMetaData>
</analysisEngineDescription>