<?xml version='1.0' encoding='UTF-8'?>
<analysisEngineDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
    <primitive>true</primitive>
    <annotatorImplementationName>de.julielab.jcore.consumer.txt.SentenceTokenConsumer</annotatorImplementationName>
    <analysisEngineMetaData>
        <name>JCoRe Text Consumer</name>
        <description>Stores the CAS document text in files. Either in tokenized sentences plus optional PoS tags or just the original document text. The text files can also be stored in GZIP format or batch-wise in ZIP archives.</description>
        <version>2.6.0-SNAPSHOT</version>
        <vendor>de.julielab.jcore.consumer.txt</vendor>
        <configurationParameters>
            <configurationParameter>
                <name>outDirectory</name>
                <description>The directory where to write the text files to.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>delimiter</name>
                <description>If this parameter is given, each token will have its part of speech tag appended where the PoS tag is delimited from the token by the string given with this parameter.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>lowercase</name>
                <description>If set to true, this parameter causes all written text output to be lowercased. Defaults to false.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>mode</name>
                <description>Possible values: TOKEN and DOCUMENT. The first prints out tokens with one sentence per line, the second just prints out the CAS document text without changing it in any way.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>gzip</name>
                <description>If set to true, the output files are stored in the GZIP format. The .gz extension is automatically appended. Defaults to false.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>zipArchive</name>
                <description>If set to true, this parameter causes the output files to be stored in ZIP archives. The maximum size in terms of entries of each archive is given by the maxZipSize parameter and defaults to 10,000. The archive names are built using the prefix specified with the zipFilePrefix parameter followed by a serially added number and the host name.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>maxZipSize</name>
                <description>If the parameter zipArchive is set to true, ZIP archives will be written with a maximum number of entries to be specified with this paramter. Defaults to 10,000.</description>
                <type>Integer</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>zipFilePrefix</name>
                <description>Specifies the base name for ZIP archives that are created in case the zipArchive parameter is enabled.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
        </configurationParameters>
        <configurationParameterSettings>
            <nameValuePair>
                <name>lowercase</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>gzip</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>zipArchive</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>maxZipSize</name>
                <value>
                    <integer>10000</integer>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>zipFilePrefix</name>
                <value>
                    <string>TXTConsumerArchive</string>
                </value>
            </nameValuePair>
        </configurationParameterSettings>
        <typeSystemDescription>
            <imports>
                <import name="de.julielab.jcore.types.casmultiplier.jcore-dbtable-multiplier-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-wikipedia-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-semantics-mention-extension-types" />
                <import name="de.julielab.jcore.types.jcore-document-meta-types" />
                <import name="de.julielab.jcore.types.jcore-document-meta-pubmed-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-document-meta-extension-types" />
                <import name="de.julielab.jcore.types.jcore-semantics-mention-types" />
                <import name="de.julielab.jcore.types.jcore-basic-types" />
                <import name="de.julielab.jcore.types.casmultiplier.jcore-uri-multiplier-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-semantics-stemnet-types" />
                <import name="de.julielab.jcore.types.jcore-document-structure-pubmed-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-mmax-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-evaluation-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-dta-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-mantra-types" />
                <import name="de.julielab.jcore.types.jcore-document-structure-types" />
                <import name="de.julielab.jcore.types.jcore-morpho-syntax-types" />
                <import name="de.julielab.jcore.types.jcore-discourse-types" />
                <import name="de.julielab.jcore.types.jcore-semantics-concept-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-medical-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-ace-types" />
                <import name="de.julielab.jcore.types.jcore-semantics-biology-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-muc7-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-semantics-bootstrep-types" />
                <import name="de.julielab.jcore.types.extensions.jcore-semantics-ace-types" />
            </imports>
        </typeSystemDescription>
        <fsIndexCollection />
        <capabilities />
        <operationalProperties>
            <modifiesCas>true</modifiesCas>
            <multipleDeploymentAllowed>true</multipleDeploymentAllowed>
            <outputsNewCASes>false</outputsNewCASes>
        </operationalProperties>
    </analysisEngineMetaData>
</analysisEngineDescription>