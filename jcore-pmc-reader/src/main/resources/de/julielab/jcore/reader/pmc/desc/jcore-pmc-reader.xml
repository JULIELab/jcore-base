<?xml version="1.0" encoding="UTF-8"?>
<collectionReaderDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
    <implementationName>de.julielab.jcore.reader.pmc.PMCReader</implementationName>
    <processingResourceMetaData>
        <name>JCoRe Pubmed Central Reader</name>
        <description>Reads Pubmed Central documents from the NXML format</description>
        <configurationParameters>
            <configurationParameter>
                <name>Input</name>
                <description>The path to an NXML file or a directory with NXML files and possibly subdirectories holding more NXML files.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>true</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>SearchRecursively</name>
                <description>If set to true, subdirectories of the given input directory Input are also searched for NXML files. Defaults to false.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>SearchInZipFiles</name>
                <description>If set to true, ZIP files found among the input are opened and also searched for NXML files. Defaults to false.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>WhitelistFile</name>
                <description>A file listing the file names that should be read. All other files will be discarded. The file name must be given without any extensions and subdirectories. For example, the file "Neural_Regen_Res/PMC2847692.nxml.gz" would be represented as "PMC2847692" in the whitelist file. Each file name must appear on a line of its own. An empty file will cause nothing to be read. A file containing only the keyword "all" will behave as if no file was given at all.</description>
                <type>String</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
            <configurationParameter>
                <name>ExtractIdFromFilename</name>
                <description>Used for NXML documents that carry their ID in the file name but not in the document itself. Extracts the string after the last path separator and the first dot after the separator and sets it to the docId feature of the Header annotation.</description>
                <type>Boolean</type>
                <multiValued>false</multiValued>
                <mandatory>false</mandatory>
            </configurationParameter>
        </configurationParameters>
        <configurationParameterSettings>
            <nameValuePair>
                <name>SearchRecursively</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
            <nameValuePair>
                <name>SearchInZipFiles</name>
                <value>
                    <boolean>false</boolean>
                </value>
            </nameValuePair>
        </configurationParameterSettings>
        <typeSystemDescription>
            <imports>
                <import name="de.julielab.jcore.types.jcore-document-meta-pubmed-types" />
                <import name="de.julielab.jcore.types.jcore-document-structure-pubmed-types" />
            </imports>
        </typeSystemDescription>
        <fsIndexCollection/>
        <capabilities>
            <capability>
                <inputs/>
                <outputs>
                    <type>de.julielab.jcore.types.TitleType</type>
                    <type>de.julielab.jcore.types.Title</type>
                    <type>de.julielab.jcore.types.TextObject</type>
                    <type>de.julielab.jcore.types.Table</type>
                    <type>de.julielab.jcore.types.SectionTitle</type>
                    <type>de.julielab.jcore.types.Section</type>
                    <type>de.julielab.jcore.types.PubType</type>
                    <type>de.julielab.jcore.types.Paragraph</type>
                    <type>de.julielab.jcore.types.OtherPub</type>
                    <type>de.julielab.jcore.types.pubmed.OtherID</type>
                    <type>de.julielab.jcore.types.pubmed.ManualDescriptor</type>
                    <type>de.julielab.jcore.types.Keyword</type>
                    <type>de.julielab.jcore.types.Journal</type>
                    <type>de.julielab.jcore.types.pubmed.Header</type>
                    <type>de.julielab.jcore.types.Footnote</type>
                    <type>de.julielab.jcore.types.Figure</type>
                    <type>de.julielab.jcore.types.Date</type>
                    <type>de.julielab.jcore.types.CaptionType</type>
                    <type>de.julielab.jcore.types.Caption</type>
                    <type>de.julielab.jcore.types.AutoDescriptor</type>
                    <type>de.julielab.jcore.types.AuthorInfo</type>
                    <type>de.julielab.jcore.types.AbstractText</type>
                    <type>de.julielab.jcore.types.AbstractSectionHeading</type>
                    <type>de.julielab.jcore.types.AbstractSection</type>
                </outputs>
                <languagesSupported/>
            </capability>
        </capabilities>
        <operationalProperties>
            <modifiesCas>true</modifiesCas>
            <multipleDeploymentAllowed>false</multipleDeploymentAllowed>
            <outputsNewCASes>true</outputsNewCASes>
        </operationalProperties>
    </processingResourceMetaData>
</collectionReaderDescription>